@page "/fetchdata"
@using Microsoft.Security.Application
@inject HttpClient Http


<div class="alert alert-light" role="alert">
  Apraksts meklētājam.....
</div>

<nav class="navbar navbar-expand-lg navbar-light bg-light">
  <div class="container-fluid">

    <EditForm Model="@searchModel" OnSubmit="@OnSearch" class="d-flex mt-1">
        <InputText @bind-Value="searchModel.Query" class="form-control" type="search" placeholder="Meklēt" aria-label="Search"  />
        <button class="btn btn-success ms-1" type="submit">Meklēt</button>

    </EditForm>

    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <li class="nav-item">
            <button class="btn btn-outline-secondary ms-1 mt-1" type="button" @onclick="ClearResults">Notīrīt rezultātus</button>
        </li>
        @if (virtues.Count > filteredVirtues.Count || !filteredVirtues.Any())
        {
            <li class="nav-item">
                <button class="btn btn-outline-secondary ms-1 mt-1" type="button" @onclick="ShowAll">Rādīt visus ierakstus</button>
            </li>
        }
      </ul>
  </div>
</nav>

@if (virtues == null)
{
    <p><em>Ielādē...</em></p>
}
else
{
    <p class="small">
        @filteredVirtues.Count rezultāti @(!string.IsNullOrEmpty(searchModel.Query) ? $" meklējumam \"{@Encoder.HtmlEncode(searchModel.Query)}\"" : "")
        @(!string.IsNullOrEmpty(searchModel.MatchedQ) && !string.Equals(searchModel.Query, searchModel.MatchedQ, StringComparison.InvariantCultureIgnoreCase)
            ?  $" ({@Encoder.HtmlEncode(searchModel.MatchedQ)})"  : "")
    </p>

    @if (filteredVirtues.Any())
    {
        <table class="table table-striped table-hover table-sm">
            <thead>
                <tr>
                    <th>Resursa nosaukums</th>
                    <th>Klase</th>
                    <th>Apraksts</th>
                    <th>Saite uz resursu</th>
                    <th>Resursa apskates laiks</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var virtue in filteredVirtues)
            {
                <tr >
                    <td style="cursor:pointer" @onclick="() => ShowDetails(virtue)"><a href=""> @virtue.Name</a></td>
                    <td>@virtue.Grade</td>
                    <td>@virtue.Description</td>
                    <td><a href="@virtue.Url" target="_blank">Saite</a></td>
                    <td>@virtue.VideoMinutes</td>
                </tr>
            }
            </tbody>
        </table>    
    }
}


<HxModal @ref="mdModal" 
    Fullscreen="ModalFullscreen.ExtraLargeDown" 
    Size="ModalSize.ExtraLarge" 
    Title="@selectedVirtue?.Name" 
    Centered="true" 
    UseStaticBackdrop="false"
    Scrollable="true">
    <BodyTemplate>
        
        <HxListGroup CssClass="list-group-flush">
            <HxListGroupItem>
                <small class="text-muted">Apraksts</small>
                <p class="mb-1">@selectedVirtue?.Description</p>
            </HxListGroupItem>
            <HxListGroupItem>
                <small class="text-muted">Klase</small>
                <p class="mb-1">@selectedVirtue?.Grade</p>
            </HxListGroupItem>
            <HxListGroupItem>
                <small class="text-muted">Resursa tips</small>
                <p class="mb-1">@selectedVirtue?.ResourceType</p>
            </HxListGroupItem>
            <HxListGroupItem>
                <small class="text-muted">Tēma</small>
                <p class="mb-1">@selectedVirtue?.Topic</p>
            </HxListGroupItem>
            <HxListGroupItem>
                <small class="text-muted">Stunda</small>
                <p class="mb-1">@selectedVirtue?.Lesson</p>
            </HxListGroupItem>
            <HxListGroupItem>
                <small class="text-muted">Avots</small>
                <p class="mb-1">@selectedVirtue?.Source</p>
            </HxListGroupItem>
            @if (selectedVirtue?.Url != null)
            {
                <HxListGroupItem>
                    <small class="text-muted">Saite</small>
                    <p class="mb-1">
                    @if (selectedVirtue.Url.StartsWith("http"))
                    {
                        <a href="@selectedVirtue.Url">@selectedVirtue.Url</a>
                    } 
                    else
                    {
                        <span>selectedVirtue?.Url</span>
                    }
                    </p>
                </HxListGroupItem>
            }

            @if (selectedVirtue?.School2030Values != null && selectedVirtue.School2030Values.Any())
            {
                <HxListGroupItem>
                    <small class="text-muted">Skola 2030 vērtības</small>
                    @foreach (var item in @selectedVirtue?.School2030Values)
                    {
                        <span class="badge bg-secondary mx-2 mt-1">@item</span>            
                    }
                </HxListGroupItem>
            }

            @if (selectedVirtue?.School2030Virtues != null && selectedVirtue.School2030Virtues.Any())
            {
                <HxListGroupItem>
                    <small class="text-muted">Skola 2030 tikumi</small>
                    @foreach (var item in @selectedVirtue?.School2030Virtues)
                    {
                        <span class="badge bg-secondary mx-2 mt-1">@item</span>            
                    }
                </HxListGroupItem>
            }

            @if (selectedVirtue?.EtapValues != null && selectedVirtue.EtapValues.Any())
            {
                <HxListGroupItem>
                    <small class="text-muted">"e-TAP" vērtības</small>
                    @foreach (var item in @selectedVirtue?.EtapValues)
                    {
                        <span class="badge bg-secondary mx-2 mt-1">@item</span>            
                    }
                </HxListGroupItem>
            }

            @if (selectedVirtue?.EtapVirtues != null && selectedVirtue.EtapVirtues.Any())
            {
                <HxListGroupItem>
                    <small class="text-muted">"e-TAP" tikumi</small>
                    @foreach (var item in @selectedVirtue?.EtapVirtues)
                    {
                        <span class="badge bg-secondary mx-2 mt-1">@item</span>            
                    }
                </HxListGroupItem>
            }
            
            @if (!string.IsNullOrWhiteSpace(selectedVirtue?.Comments))
            {
                <HxListGroupItem >
                    <small class="text-muted">Komentārs</small>
                    <p class="mb-1">@selectedVirtue?.Comments</p>
                </HxListGroupItem>    
            }
    </HxListGroup>

	</BodyTemplate>
</HxModal>